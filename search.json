[{"title":"github进阶---git远程对github的操控","url":"http:/TheLuminous.github.io/2016/08/18/github进阶---git远程操作github/","content":"<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;github给了我们一个免费的个人空间–300M，虽然不多，但也够我们用了。我们可以用这个空间来做一些有趣的事情，比如上传自己的html代码，生成自己独特的网页（你可以用这个空间去表白我会乱说）。好啦，下面给大家讲解一下如何远程操作我们的github空间。</p>\n<h1 id=\"1将本地项目push至远程仓库\"><a href=\"#1将本地项目push至远程仓库\" class=\"headerlink\" title=\"1将本地项目push至远程仓库\"></a>1将本地项目push至远程仓库</h1><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;首先在github新建一个空白仓库，名字可以起你喜欢的名字。然后创建成功的话它应该是这样的<br><img src=\"http://i.imgur.com/2UG45vW.png\" alt=\"\"></p>\n<p>可以看出，github还是很人性化的，他已经告诉我们如何把本地的代码push到github上。我们就按照这个步骤来。</p>\n<h2 id=\"1-1建空间\"><a href=\"#1-1建空间\" class=\"headerlink\" title=\"1.1建空间\"></a>1.1建空间</h2><p>首先在合适的地方（自己喜欢）新建空白文件夹给她起一个好听的名字(比如说f）然后进入这个文件夹，把自己写好的代码放进去（此处以html代码为例）</p>\n<h2 id=\"1-2进bash\"><a href=\"#1-2进bash\" class=\"headerlink\" title=\"1.2进bash\"></a>1.2进bash</h2><p>在f中进入git bash执行以下命令</p>\n<p>1&gt;初始化git环境</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init</span><br></pre></td></tr></table></figure>\n<p>2&gt;加载文件夹中的文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add .</span><br></pre></td></tr></table></figure>\n<p>“ . ”表示把文件夹中的文件全部加载，如果以后修改代码比如说增加了1.md文件那么只需 git add 1.md就可以了</p>\n<p>3&gt;为此次修改创建时间点（方便以后回到这个时间点，如果代码错误的话）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit -m “first commit“</span><br></pre></td></tr></table></figure>\n<p>“ ”内的内容可自行修改<br>4&gt;设置要上传到的远程地址</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote add origin https：//github.com/TeLuminous/f.git</span><br></pre></td></tr></table></figure>\n<p>其中用户名和仓库名都要换成自己的</p>\n<p>5&gt;push项目到远程分之</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push -u origin master</span><br></pre></td></tr></table></figure>\n<p>此时会要求你输入用户名和密码（如果闲这样麻烦的话，可以使用ssh传输，具体就是在4&gt;中将地址换为<a href=\"mailto:git@github.com\" target=\"_blank\" rel=\"noopener\">git@github.com</a>:Theluminous/f.git,就不用输入用户名和密码了)将本地项目上传至仓库的master分支（如果没有的话他会新建一个）静待片刻—-no，是很久很久（上传速度几kb，我也是欲哭无泪）<br>如果你要新建分支并切换的话，只需要</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout -b gh-pages origin/gh-pages</span><br></pre></td></tr></table></figure>\n<p>分支名字随意起名，如果只需要切换分支的话只需要</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout origin/gh-pages</span><br></pre></td></tr></table></figure>\n<p>如果remote出现错误，需要执行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git pull origin master</span><br></pre></td></tr></table></figure>\n<p>master为你工作的分支然后再push就可以了</p>\n<p>至此github已经有了你的html代码了（需要说明一下，你的起始界面必须为index.html，github服务器会自动寻找index.html文件并打开它）然后再为这个仓库生成web界面就可以了具体步骤可以参照<a href=\"[https://theluminous.github.io/2016/08/16/github+hexo搭建个人博客/\">https://theluminous.github.io/2016/08/16/github+hexo搭建个人博客/</a></p>\n<p>然后访问<em><a href=\"https://theluminous.github.io/test\" target=\"_blank\" rel=\"noopener\">https://theluminous.github.io/test</a></em>/其中的用户名和仓库替换成你自己的就可以访问到自己的网站了。</p>\n<p>此后如果还要修改并push只需要执行前面的2&gt;,3&gt;,5&gt;步就可以了</p>\n<h1 id=\"2将github项目clone到本地\"><a href=\"#2将github项目clone到本地\" class=\"headerlink\" title=\"2将github项目clone到本地\"></a>2将github项目clone到本地</h1><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;上面说了将本地项目push到github仓库，那我们如果想把github的项目clone到本地呢？怎么办，分为以下几步。</p>\n<h2 id=\"2-1建空间\"><a href=\"#2-1建空间\" class=\"headerlink\" title=\"2.1建空间\"></a>2.1建空间</h2><p>新建文件夹并进入。</p>\n<h2 id=\"2-2进bash\"><a href=\"#2-2进bash\" class=\"headerlink\" title=\"2.2进bash\"></a>2.2进bash</h2><p>执行以下代码：</p>\n<p>clonegithub远程仓库</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/TheLuminous/test.git</span><br></pre></td></tr></table></figure>\n<p>然后你就会发现你的文件夹里会出现一个test文件夹，然后你要对它做些什么见不得人的事情，我就管不着了。</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这就是git的基本操作如果想要更深入的了解的话，可以到官网上去下载它的官方文档。如果你觉得这样一直在终端操作太麻烦那么你也可以用git GUI或者git for windows这样的可视化界面来操作。具体使用自行百度。。关于大家关心的表白页面的问题呢，可以百度一下表白界面的源码（实在是一大堆）然后放到仓库就可以了。</p>\n","categories":["初级入坑指南"],"tags":["github","git"]},{"title":"hexo进阶1---hexo主题的选择与修改","url":"http:/TheLuminous.github.io/2016/08/18/hexo进阶1---hexo主题的选择与修改/","content":"<p>  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;好不容易搭建了自己的博客，满心欢喜的打开网址一看，心瞬间凉了半截–这实在是丑的毫无天理啊，此时，更换一个漂亮的主题成了我们的刚需。</p>\n<h1 id=\"1选择主题\"><a href=\"#1选择主题\" class=\"headerlink\" title=\"1选择主题\"></a>1选择主题</h1><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;主题在这里<br><a href=\"https://github.com/hexojs/hexo/wiki/Themes\" target=\"_blank\" rel=\"noopener\">https://github.com/hexojs/hexo/wiki/Themes</a>，选择一个自己喜欢的就好了，DEMO为演示地址，主题名为源码地址。其中有的是不能用的，根据个人喜好选择一个喜欢的。</p>\n<h1 id=\"2更换主题\"><a href=\"#2更换主题\" class=\"headerlink\" title=\"2更换主题\"></a>2更换主题</h1><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;下面以ALEX为例讲解如图<img src=\"http://i.imgur.com/Z8zwgxV.png\" alt=\"\"></p>\n<h2 id=\"2-1克隆主题到本地\"><a href=\"#2-1克隆主题到本地\" class=\"headerlink\" title=\"2.1克隆主题到本地\"></a>2.1克隆主题到本地</h2><p>点击主题名称进入主题地址记下网址：<em><a href=\"https://github.com/ppoffice/hexo-theme-alex\" target=\"_blank\" rel=\"noopener\">https://github.com/ppoffice/hexo-theme-alex</a></em>。 在本地你存放博客文件的根目录下进入git bash（我的是myblog）执行如下命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/ppoffice/hexo-theme-alex themes/alex</span><br></pre></td></tr></table></figure>\n<p>clone的地址即为项目源码地址，会被存放到themes文件夹下面的alex中其中themes/后面可以随意起名字<br>。</p>\n<h2 id=\"2-2修改配置文件\"><a href=\"#2-2修改配置文件\" class=\"headerlink\" title=\"2.2修改配置文件\"></a>2.2修改配置文件</h2><p>在myblog根目录下找到config.yml文件如图：<img src=\"http://i.imgur.com/CDFuYw6.jpg\" alt=\"\"></p>\n<p>用写字板打开（记事本第一次打开的话排版不是很好）将其中的theme修改如下：<img src=\"http://i.imgur.com/foJenv0.png\" alt=\"\"></p>\n<p>其中theme为你选择的主题，名称为你themes文件夹中的文件名</p>\n<h2 id=\"2-3进入bash\"><a href=\"#2-3进入bash\" class=\"headerlink\" title=\"2.3进入bash\"></a>2.3进入bash</h2><p>在mylog根目录进入bash执行两个命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n<p>这两步是重新生成blog并部署到github然后访问你个人博客的地址发现主题已经更改了</p>\n<h1 id=\"3修改主题\"><a href=\"#3修改主题\" class=\"headerlink\" title=\"3修改主题\"></a>3修改主题</h1><h2 id=\"3-1找文档\"><a href=\"#3-1找文档\" class=\"headerlink\" title=\"3.1找文档\"></a>3.1找文档</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;更换完主题后你会发现然并卵—这tm的还是一片空白啊，怎么人家的绚丽多彩，我这点什么什么没有呢—-别着急，下面大家一起来修改主题。</p>\n<p>在每个主题源码的下面你都会发现一个READEME.md，这个就是对这个主题的介绍啦，你可以按照这个来修改主题。如题<img src=\"http://i.imgur.com/JmhzFFQ.png\" alt=\"\"></p>\n<p>是的，你没有看错，它是—-英文的。如果你的英文不太好的话，也不要伤心，你可以看看其他主题有没有中文的然后按照中文修改修改（改改布局啦，加入一些特有的功能啦如多说，统计什么的）你会发现，原来主题的修改都是大同小异的，也可以依样画葫芦修改自己的主题啦。这时候去hexo官网查看hexo帮助文档也是一个不错的选择，没准以后你灵感突发创造一个自己的主题呢。</p>\n<h2 id=\"3-2进bash\"><a href=\"#3-2进bash\" class=\"headerlink\" title=\"3.2进bash\"></a>3.2进bash</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;我们在修改主题的时候需要随时调试，可以在先用hexo s部署到本地查看效果然后等调试好了再hexo d提交。然后如果调试次数多了以后可以hexo clean清楚一下然后hexo g重新部署再hexo s本地部署或者hexo d（部署到github）。</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;修改主题是最耗费时间的事情，毕竟不是你下载的主题就完全符合你的喜好，而且还要自己摸索。不过呢，我相信，当你终于拥有一个属于你的主题时，你的心情也是不可比拟的<em>@</em>，加油。</p>\n","categories":["初级入坑指南"],"tags":["hexo"]},{"title":"hexo进阶2---使用markdown书写文章","url":"http:/TheLuminous.github.io/2016/08/18/hexo进阶2---使用markdown书写文章/","content":"<p>  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;相信在大家累死累活的搭建完自己的博客时，一定想到写篇博客压压惊—别急下面我就来和大家学习一下如何高效的写文章。</p>\n<h1 id=\"1背景知识\"><a href=\"#1背景知识\" class=\"headerlink\" title=\"1背景知识\"></a>1背景知识</h1><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Markdown是一种可以使用普通文本编辑器编写的标记语言，通过类似HTML的标记语法，它可以使普通文本内容具有一定的格式。</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Markdown具有一系列衍生版本，用于扩展Markdown的功能(如表格、脚注、内嵌HTML等等)，这些功能原初的Markdown尚不具备，它们能让Markdown转换成更多的格式，例如LaTeX，Docbook。Markdown增强版中比较有名的有Markdown Extra、MultiMarkdown、 Maruku等。这些衍生版本要么基于工具，如Pandoc;要么基于网站，如GitHub和Wikipedia，在语法上基本兼容，但在换行等细节上也有改动。</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;简单说来他就是支持html的一种文档，当浏览器度内容时会自动把它转换成网页</p>\n<h1 id=\"2如何写作\"><a href=\"#2如何写作\" class=\"headerlink\" title=\"2如何写作\"></a>2如何写作</h1><h2 id=\"2-1学习架构\"><a href=\"#2-1学习架构\" class=\"headerlink\" title=\"2.1学习架构\"></a>2.1学习架构</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;打开myblog（你存放<br>博客文件的根目录）下的source再打开_posts文件是不是惊奇地发现里面有好些md文件，恭喜你，这就是你千辛万苦寻找的博客文件了。随便打开一篇看一下他的结构<img src=\"http://i.imgur.com/UPV5Egh.png\" alt=\"\"></p>\n<p>发现里面的内容如下所示<br><img src=\"http://i.imgur.com/A8N9Psm.png\" alt=\"\"></p>\n<p>多打开几个看看，你会发现每个md文件都有上面那几个内容，那这是干什么的？经过本人的多次实验，我发现他这个结构是按照hexo来的。当你发表文章到博客上时，hexo会根据你的title，data，tags，categories来生成一系列的内容（里面的内容都可以自己写）然后你就可以根据分类找文章，根据标签找文章了。说道这里，让我们再感受一下hexo的强大。</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;膜拜完之后，就要记住，每篇文章都要有这个东西方便日后管理。</p>\n<h2 id=\"2-1学习语法\"><a href=\"#2-1学习语法\" class=\"headerlink\" title=\"2.1学习语法\"></a>2.1学习语法</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关于语法，我没什么可说的。我只需要告诉大家四字真言：<strong>它支持HTML ！！！ 它支持HTML！！！它支持HTML！！！</strong>重要的事情说三遍。然后插入图片啦，设置超链接啦都随你了。他这个设置图片的话得先上传到网上，再输入图片的url或者直接输入图片的url就可以了。标题的话用#就可以了几个#代表几级标题记得要和后面的文字有空格。在这里为大家推荐一个编辑markdown的神器：MarkdownPad功能很齐全，很简单。为大家传上下载地址：<em><a href=\"http://pan.baidu.com/s/1nvIXBwH\" target=\"_blank\" rel=\"noopener\">http://pan.baidu.com/s/1nvIXBwH</a></em>，提取码tpm8</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;到现在恭喜你成功入坑，撒花，撒花。后面的路还很长，加油吧，少年！<br>ps：github是没办法被百度收录的，因为github屏蔽了百度的蜘蛛，这是因为…..(balabala一堆）所以如果要想被百度收录的话可以自己搭vps，或者把hexo博客再托管到coding然后申请域名，解析域名然后提交给百度站长。。。所以说，路，很长，很长。。。。。。。</p>\n","categories":["初级入坑指南"],"tags":["hexo","markdown"]},{"title":"闲来几笔涂鸦","url":"http:/TheLuminous.github.io/2016/08/17/闲来几笔涂鸦/","content":"<p>  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;好不容易有了个人博客，如果不用来装x，那么和咸鱼有什么区别呢？闲来无事，把自己以前发闷时涂涂写写的文字传了上了，也不能说是词哈，因为根本就没按照词牌名填词==。欢迎大家吐槽</p>\n<center><br> <strong>锁春寒·暮色之秋</strong><br><br><br>  凉风骤起，宿雁南飞，斜阳无语姗姗去。<br><br>正道是，天涯晚秋，叹一句知音难觅。<br><br>   梧桐叶落，芙蓉泣绿，琴声萋萋黄埃里。<br><br>只可悲，高山流水，伯牙子期终不遇。<br><br><br><br><strong>春日离思</strong><br><br><br> 儿时不怕伤，欲把春来唱。<br><br>相执手，情语低叙，约定永世不忘。<br><br> 谁料成家日，天涯各一方。<br><br>空对酒，衷肠难诉，惟留当年月光。<br><br><br><br><strong>梦碎神州</strong><br><br><br> 曾把雄心寄壮志，欲驰骋神州。<br><br>浮浮沉沉，心随梦碎，只得两行清泪。<br><br>  临江边，空对月，笑饮酒，再回首。<br><br>今朝已逝，明日将何留？<br><br><br><br><strong>致故人</strong><br><br><br>遥忆当年，不解离殇。<br><br>秋月共赏，懵懂错把流光牵。<br><br>笑问如今，何必相思。<br><br>红豆为愿，来世再续此生缘。<br><br><br><br>看累了吧，看会美女放松放松眼睛<br><img src=\"http://i.imgur.com/FJmUTbd.jpg\" alt=\"\"><br><br><br> <strong>闻春语</strong><br><br><br>东风欲来花满楼。<br><br>桃花未谢，梨花又香。<br><br>垂柳依依人暗住，漫随云卷，静品晴天。<br><br>   闲来垂钓碧溪上。<br><br>流莺轻啼，黄鹂慢鸣。<br><br>总是一年相思处，韶华过了，再借流光。<br><br><br><br><strong>秋月夜</strong><br><br><br>月如霜，并泪沾裳，梦回几转怨夜长。<br><br>铃儿轻荡，渐入愁肠。<br><br>风骤紧，吹落潇湘，雁回几度叹情伤。<br><br>秋水望穿，伊人何方。<br></center>\n","categories":["难得提笔看花"],"tags":["词"]},{"title":"github+hexo搭建个人博客","url":"http:/TheLuminous.github.io/2016/08/16/github+hexo搭建个人博客/","content":"<p>  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;相逢即是缘，既然大家这么有缘，这本入坑指南就收你5块钱一本好了。本指南基于windows，采用github+hexo搭建个人博客。</p>\n<h1 id=\"1背景知识\"><a href=\"#1背景知识\" class=\"headerlink\" title=\"1背景知识\"></a>1背景知识</h1><h2 id=\"1-1github\"><a href=\"#1-1github\" class=\"headerlink\" title=\"1.1github\"></a>1.1github</h2><p>   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; GitHub于2008年上线，目前，除了Git代码仓库托管及基本的Web管理界面以外，还提供了订阅、讨论组、文本渲染、在线文件编辑器、协作图谱（报表）、代码片段分享（Gist）等功能。正因为这些功能所提供的便利，又经过长期的积累，GitHub的用户活跃度很高，在开源世界里享有深远的声望，形成了所谓的社交化编程文化（Social Coding）。”——-其实不用这么复杂，你只需要知道它是一个分享代码的地方，并且可以托管你的项目源码，并为你的项目生成一个免费域名（所以我们就可以放我们自己编写的html上去了<em>-</em>）。</p>\n<h2 id=\"1-2hexo\"><a href=\"#1-2hexo\" class=\"headerlink\" title=\"1.2hexo\"></a>1.2hexo</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Hexo 是一个简单地、轻量地、基于Node的一个静态博客框架，可以方便的生成静态网页托管在github和Heroku上，引用Hexo作者 @tommy351 的话：<br>快速、简单且功能强大的 Node.js 博客框架。 </p>\n<p>A fast, simple &amp; powerful blog framework, powered by Node.js.</p>\n<p>就是说，我们采用hexo来搭建自己的博客可以给我们带来极大的便利，比如发表文章，架构等等。当然，你也可以用自己的html代码去实现博客但如果要更新的话，又是一件很困难的事（尤其对我这样的前端小白来说==）。</p>\n<h1 id=\"2环境搭建\"><a href=\"#2环境搭建\" class=\"headerlink\" title=\"2环境搭建\"></a>2环境搭建</h1><h2 id=\"2-1github环境搭建\"><a href=\"#2-1github环境搭建\" class=\"headerlink\" title=\"2.1github环境搭建\"></a>2.1github环境搭建</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;首先你要有个github账号对不对，然后如果你要把本地的代码上传到github中你的个人仓库里，又要下载git客户端。所以此过程分两步进行。</p>\n<h3 id=\"2-1-1注册github账号\"><a href=\"#2-1-1注册github账号\" class=\"headerlink\" title=\"2.1.1注册github账号\"></a>2.1.1注册github账号</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;如图，进入github官网注册，填写邮箱，用户名，密码。<br><img src=\"http://i.imgur.com/pyY2P33.png\" alt=\"\"><br>登陆进去以后选择“starte a project”或者“new repository”此时github可能会给你注册的邮箱发邮件，让你完成验证，去邮箱接受验证就可以了，如果有提示说给你发邮件但你没有收到的话，就去垃圾箱看一看<br><img src=\"http://i.imgur.com/jTDyHQG.png\" alt=\"\"><br>然后填写你仓库的名称，注意，此时因为我们要用hexo主题所以仓库的名称必须严格按照规定：用户名.github.io 比如我的注册名是TheLuminous，所以我的个人博客仓库的名字就是TheLuminous.github.io  如图，填写名字然后“creat repositroy”<br><img src=\"http://i.imgur.com/qhEieBr.png\" alt=\"\"><br>然后进入仓库点击“setting” 如图<br><img src=\"http://i.imgur.com/zJcunUI.png\" alt=\"\"><br>在setting中的options选项找到这个界面 如图<br><img src=\"http://i.imgur.com/fNxc28h.png\" alt=\"\"><br>点击它，然后选择“continue to layout” 如图<br><img src=\"http://i.imgur.com/fcipfbj.png\" alt=\"\"><br>然后随便选择一个主题（因为我们会用自己的主题替换它），点“publish 。。” 如图<br><img src=\"http://i.imgur.com/Xg6WowM.png\" alt=\"\"><br>然后复制仓库名，粘贴在浏览器地址栏，打开，效果如何，这就是你自己的网站了&amp;-&amp;。如图<br><img src=\"http://i.imgur.com/oeDk3e9.png\" alt=\"\"></p>\n<h3 id=\"2-1-2下载安装git客户端\"><a href=\"#2-1-2下载安装git客户端\" class=\"headerlink\" title=\"2.1.2下载安装git客户端\"></a>2.1.2下载安装git客户端</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;可以进入git官网下载（需要翻墙）<a href=\"https://www.git-scm.com/download/\" target=\"_blank\" rel=\"noopener\">https://www.git-scm.com/download/</a>；也可以用楼主的分享<a href=\"http://pan.baidu.com/s/1qYlH4fi\" target=\"_blank\" rel=\"noopener\">http://pan.baidu.com/s/1qYlH4fi</a><br>提取码:nhrd。自定义安装路径然后一路确定就可以了。</p>\n<h2 id=\"2-2hexo环境搭建\"><a href=\"#2-2hexo环境搭建\" class=\"headerlink\" title=\"2.2hexo环境搭建\"></a>2.2hexo环境搭建</h2><h3 id=\"2-2-1安装node-js\"><a href=\"#2-2-1安装node-js\" class=\"headerlink\" title=\"2.2.1安装node.js\"></a>2.2.1安装node.js</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hexo基于node.js所以需要安装node.js，可以去官网下载<a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"noopener\">https://nodejs.org/en/</a>；也可以用楼主的分享<a href=\"http://pan.baidu.com/s/1qYlH4fi\" target=\"_blank\" rel=\"noopener\">http://pan.baidu.com/s/1qYlH4fi</a><br>提取码:nhrd。自定义安装路径然后一路确定就可以了。</p>\n<h3 id=\"2-2-2安装hexo\"><a href=\"#2-2-2安装hexo\" class=\"headerlink\" title=\"2.2.2安装hexo\"></a>2.2.2安装hexo</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在你安装node.js的根目录下空白处右击鼠标出现如图<br><img src=\"http://i.imgur.com/SsAGB1B.png\" alt=\"\"></p>\n<p>选择“git bash here”进入git命令端<br>输入以下命令安装hexo</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo</span><br></pre></td></tr></table></figure>\n<p>待命令执行完毕后，关闭bash窗口，在此目录下新建myblog文件夹（你博客文件的存放地址，可以随意起名，最好用英文）然后进入myblog文件夹，在此根目录下空白处右击鼠标（操作同上一步）进入git命令端。执行如下命令：</p>\n<p>1初始化hexo环境</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init</span><br></pre></td></tr></table></figure>\n<p>2安装依赖包</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n<p>3更新博客内容到服务器</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g</span><br></pre></td></tr></table></figure>\n<p>4启动hexo本地服务器</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n<p>访问<a href=\"http://localhost:4000\" target=\"_blank\" rel=\"noopener\">http://localhost:4000</a>即可看到你的博客<br>至此，hexo环境搭建成功</p>\n<h1 id=\"3将hexo博客部署至github\"><a href=\"#3将hexo博客部署至github\" class=\"headerlink\" title=\"3将hexo博客部署至github\"></a>3将hexo博客部署至github</h1><h2 id=\"3-1配置ssh\"><a href=\"#3-1配置ssh\" class=\"headerlink\" title=\"3.1配置ssh\"></a>3.1配置ssh</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Git是分布式的代码管理工具，远程的代码管理是基于SSH的，所以要使用远程的Git则需要SSH的配置(如果你是第一次使用git的话）<br>github的SSH配置如下：</p>\n<p>1在桌面进入git bash，输入以下命令<br>设置Git的user name和email：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name &quot;TheLuminous&quot;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.email &quot;718934648@qq.com&quot;</span><br></pre></td></tr></table></figure>\n<p>其中双引号的内容替换为自己用户名和email（注意，命令是有双引号的）</p>\n<p>2生成SSH密钥过程：<br>1&gt;查看是否已经有了ssh密钥：cd ~/.ssh<br>如果没有密钥则不会有此文件夹，有则备份删除</p>\n<p>2&gt;产生密钥（同样在此git bash执行命令）：<br>ssh-keygen -t rsa -C “<a href=\"mailto:718934648@qq.com\" target=\"_blank\" rel=\"noopener\">718934648@qq.com</a>”<br>按3个回车，密码为空。引号处替换为自己email（命令有双引号）</p>\n<p>最后得到了两个文件：id_rsa和id_rsa.pub</p>\n<p>3.在github上添加ssh密钥，这要添加的是“id_rsa.pub”里面的公钥。位置在C:\\Users\\Administrator.ssh。用记事本打开，复制。<br>打开<a href=\"https://github.com/\" target=\"_blank\" rel=\"noopener\">https://github.com/</a> ，登陆到自己的账户，然后添加ssh。选择setting如图<br><img src=\"http://i.imgur.com/xouJGep.png\" alt=\"\"></p>\n<p>然后选择ssh andGPG keys再选择new ssh key把复制的内容粘贴，保存<br><img src=\"http://i.imgur.com/4ceSeJW.png\" alt=\"\"></p>\n<p>至此，ssh配置完成</p>\n<h2 id=\"3-2将hexo部署至github\"><a href=\"#3-2将hexo部署至github\" class=\"headerlink\" title=\"3.2将hexo部署至github\"></a>3.2将hexo部署至github</h2><p>在myblog目录（你自定义的博客文件存放目录）下找到config.yml文件打开它（如果记事本排版不好就用写字板打开）如图<br><img src=\"http://i.imgur.com/M9N4Q1k.png\" alt=\"\"></p>\n<p>deploy中的各属性讲解如下：</p>\n<p>type：hexo部署时解析域名的种类</p>\n<p>repository：对应的存放个人博客源码的仓库地址，把用户名换成自己的即可</p>\n<p>branch：要部署到的分支</p>\n<p><strong>注意：冒号后面有一个空格！！！</strong>为了大家方便把文件粘贴到这：</p>\n<p>type: git</p>\n<p>  repository: <a href=\"mailto:git@github.com\" target=\"_blank\" rel=\"noopener\">git@github.com</a>:TheLuminousTheLuminous.github.io.git</p>\n<p> branch: master</p>\n<p>如图：<br><img src=\"http://i.imgur.com/BcsOXUn.png\" alt=\"\"><br>然后在myblog根目录下进入git bash执行如下命令</p>\n<p>1配置hexo部署环境</p>\n<pre><code>npm install hexo-deployer-git --save\n</code></pre><p>2重新部署hexo博客</p>\n<pre><code>hexo g\n</code></pre><p>3将本地hexo博客部署至github</p>\n<pre><code>hexo d\n</code></pre><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;好了！到现在为止，试着访问“你的用户名.github.io”，你可以惊喜的发现，hexo的博客被部署到github了。到现在为止，你已经基本入坑。接下来我会为大家带来hexo和github的进阶使用（包括大家很关心的github托管静态网站与基于hexo主题的选择与改进），并教会大家如何用markdown高效的写文章。有任何问题欢迎email骚扰（<a href=\"mailto:718934648@qq.com\" target=\"_blank\" rel=\"noopener\">718934648@qq.com</a>）。持续更新</p>\n","categories":["初级入坑指南"],"tags":["github","hexo"]},{"title":"about","url":"http:/TheLuminous.github.io/about/index.html","content":"","categories":[],"tags":[]},{"title":"project","url":"http:/TheLuminous.github.io/project/index.html","content":"","categories":[],"tags":[]},{"title":"category","url":"http:/TheLuminous.github.io/category/index.html","content":"","categories":[],"tags":[]},{"title":"link","url":"http:/TheLuminous.github.io/link/index.html","content":"","categories":[],"tags":[]},{"title":"search","url":"http:/TheLuminous.github.io/search/index.html","content":"","categories":[],"tags":[]},{"title":"tag","url":"http:/TheLuminous.github.io/tag/index.html","content":"","categories":[],"tags":[]}]